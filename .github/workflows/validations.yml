name: DS5111 su24 Python package tester

on:
  workflow_dispatch:
    inputs:
      uuid:
        description: 'fju4ek'
        required: true
        type: string
      github_id:
        description: 'Ohashin2G'
        default: ""
        required: true
        type: string
      package_name:
        description: 'pkg_fju4ek'
        required: true
        type: string

permissions:
  id-token: write
  contents: read
  pull-requests: write


jobs:
  validate-package:
    runs-on: ubuntu-latest
    container:
      image: python:3.8
    defaults:
      run:
        shell: bash
    steps:
      - name: Create env, install package, test package import
        env:
          GHANDLE: ${{ inputs.Ohashin2G }}
          VID: ${{ inputs.fju4ek }}
          PACKAGE: ${{ inputs.pkg_fju4ek }}
        run: |
          python3 -m venv env; source env/bin/activate, pip install --upgrade pip
          . env/bin/activate; pip install git+https://github.com/${GHANDLE}/${VID}_DS5111su24_lab_01@WEEK08/refactoring
          . env/bin/activate; pip list
          . env/bin/activate; python -c "import ${PACKAGE} as pkg; print(pkg.tokenize('To be or not to be'))"
          pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pytest -vvx tests
          if [ -f integration_tests.py ]; then pytest -vvx integration_tests.py; fi
      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
      - name: Check package
        run: |
          twine check dist/*
      - name: Upload package
        run: |
          echo ${{ secrets.PYPI_PASSWORD }} | twine upload --repository pypi dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      - name: Cleanup
        run: |
          rm -rf build dist *.egg-info
  build:
  
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          make update
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          source env/bin/activate; pytest -vvx tests
          if [ -f integration_tests.py ]; then pytest -vvx integration_tests.py; fi

